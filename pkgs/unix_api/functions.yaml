"<fcntl.h>":
  - prototype: "int open(const char *, int, mode_t)"
    comment: "Opens a file."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/open.html"
    error_value: "-1"
  - prototype: "int openat(int, const char *, int, mode_t)"
    comment: "Opens a file relative to a file descriptor."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/openat.html"
    error_value: "-1"
"<stdio.h>":
  - prototype: "int rename(const char *, const char *)"
    comment: "Renames a file."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/rename.html"
"<stdlib.h>":
  - prototype: "char * getenv(const char *)"
    comment: "Gets the value of an environment variable."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/getenv.html"
"<string.h>":
  - prototype: "char *mkdtemp(char *)"
    comment: "Create a temporary directory."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/mkdtemp.html"
  - prototype: "char *strerror(int)"
    comment: "Formats an error code as a string."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/strerror.html"
"<sys/mman.h>":
  - prototype: "int mlock(const void *, size_t)"
    comment: Locks a range of process address space."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/mlock.html"
    error_value: "-1"
  - prototype: "int mlockall(int)"
    comment: Locks the processes address space."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/mlockall.html"
  - prototype: "void *mmap(void *, size_t, int, int, int, off_t)"
    comment: Maps pages of memory."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/mmap.html"
    error_value: "MAP_FAILED"
  - prototype: "int mprotect(void *, size_t, int)"
    comment: Sets the protection of mapped memory.
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/mprotect.html"
    error_value: "-1"
  - prototype: "int munlock(const void *, size_t)"
    comment: Unlocks a range of process address space."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/munlock.html"
    error_value: "-1"
  - prototype: "int munmap(void *, size_t)"
    comment: Unmaps pages of memory."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/munmap.html"
    error_value: "-1"
"<sys/stat.h>":
  - prototype: "int chmod(const char *, mode_t)"
    comment: "Changes the mode of a file."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/chmod.html"
    error_value: "-1"
  - prototype: "int mkdir(const char *, mode_t)"
    comment: "Creates a directory"
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/mkdir.html"
    error_value: "-1"
"<unistd.h>":
  - prototype: "int access(const char *, int)"
    comment: "Determines the accessibility of a file."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/access.html"
  - prototype: "unsigned alarm(unsigned)"
    comment: "Schedules an alarm signal."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/alarm.html"
  - prototype: "int chdir(const char *)"
    comment: "Changes the working directory."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/chdir.html"
  - prototype: "int close(int)"
    comment: "Closes a file descriptor."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/close.html"
  - prototype: "char * crypt(const char *, const char *)"
    comment: "Encrypts a string."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/crypt.html"
    available_android: false
    error_value: "NULL"
  - prototype: "char * ctermid(char *)"
    comment: "Generates a path name for the controlling terminal."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/ctermid.html"
    available_android: false
    error_value: "\"\""
  - prototype: "int dup(int)"
    comment: "Duplicates an open file descriptor."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html"
  - prototype: "int dup2(int, int)"
    comment: "Copies an open file descriptor into another."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html"
  - prototype: "int faccessat(int, const char *, int, int)"
    comment: "Determines the accessibility of a file descriptor."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/faccessat.html"
  - prototype: "int fchdir(int)"
    comment: "Changes the current directory."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/fchdir.html"
  - prototype: "int fdatasync(int)"
    comment: "Forces all queued I/O operations to complete."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/fdatasync.html"
    available_ios: false
    error_value: "-1"
  - prototype: "char * getcwd(char *, size_t)"
    comment: "Gets the current working directory."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/getcwd.html"
    error_value: "NULL"
  - prototype: "pid_t getpid(void)"
    comment: "Gets the current process id."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/getpid.html"
    error_value: "-1"
  - prototype: "pid_t getppid(void)"
    comment: "Gets the parent process id."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/getppid.html"
    error_value: "-1"
  - prototype: "ssize_t read(int, void *, size_t)"
    comment: "Reads from a file."
    url: "https://pubs.opengroup.org/onlinepubs/009696699/functions/read.html"
    error_value: "-1"
  - prototype: "ssize_t write(int, const void *, size_t)"
    comment: "Writes to a file."
    url: "https://pubs.opengroup.org/onlinepubs/009696699/functions/write.html"
    error_value: "-1"
  - prototype: "int unlink(const char *)"
    comment: "Removes a directory entry."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/linkat.html"
  - prototype: "int unlinkat(int, const char *, int)"
    comment: "Removes a directory entry relative to another file."
    url: "https://pubs.opengroup.org/onlinepubs/9699919799/functions/unlinkat.html"
